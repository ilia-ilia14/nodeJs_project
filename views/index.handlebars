<h2 class="page-header">Dashboard</h2>
<p>Welcome to the chetroom application</p>
<style>
    #messages{height:300px;}
</style>
<div class="row">
    <div class="col-md-6 offset-md-3 col-sm-12">
        <h1 class="text-center">
            MongoChat
            <button id="clear" class="btn btn-danger">Clear</button>
        </h1>
        <div id="status"></div>
        <div id="chat">
            <input type="text" id="username" class="form-control" placeholder="Enter name..." value='{{{user.name}}}'>
            <br>
            <div class="card">
                <div id="messages" class="card-block">

                </div>
            </div>
            <br>
            <textarea id="textarea" class="form-control" placeholder="Enter message..."></textarea>
        </div>
    </div>
    <div class="col-md-3 offset-md-2 col-sm-12" id="users" style="border:2px solid">
       <h4>Users Online</h4>
        <div id="activeusers">

        </div>
    </div>
    <div class="col-md-3 offset-md-2 col-sm-12" id="users" style="border:2px solid">
        <h4>User List</h4>
        <div id="allusers">

        </div>
    </div>
</div>



<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js"></script>

   <script>
       (function(){
           var element = function(id){
               return document.getElementById(id);
           }

           // Get Elements
           var status = element('status');
           var messages = element('messages');
           var textarea = element('textarea');
           var username = element('username');
           var clearBtn = element('clear');

           // Set default status
           var statusDefault = status.textContent;

           var setStatus = function(s){
               // Set status
               status.textContent = s;

               if(s !== statusDefault){
                   var delay = setTimeout(function(){
                       setStatus(statusDefault);
                   }, 4000);
               }
           }

           // Connect to socket.io
           var socket = io.connect('http://127.0.0.1:4000');

           // Check for connection
           if(socket !== undefined){
               console.log('Connected to socket...');
               // Handle Output
               socket.on('outputChatMessage', function(data){
                  // console.log(data);
                   if(data.length){
                       for(var x = 0;x < data.length;x++){
                           // Build out message div
                           var message = document.createElement('div');
                           message.setAttribute('class', 'chat-message');
                           message.textContent = data[x].name+": "+data[x].message;
                           messages.appendChild(message);
                           messages.insertBefore(message, messages.firstChild);
                       }
                   }
               });

               // Get active users
               socket.on('activeUsers', function(activeUsers) {
                   activeUsers.forEach(function(user) {
                       var activeuser = document.createElement('p');
                       activeuser.setAttribute('class', 'users');
                       activeuser.textContent = user.userName;
                       activeusers.appendChild(activeuser);
                       activeusers.insertBefore(activeuser, activeusers.firstChild);
                   });
               });




               socket.on('users', function(users) {
                 //displayUsers(users);
              //   console.log(users);
              //   console.log("ran");
                });




               // Get Status From Server
               socket.on('status', function(data){
                   // get message status
                   setStatus((typeof data === 'object')? data.message : data);

                   // If status is clear, clear text
                   if(data.clear){
                       textarea.value = '';
                   }
               });

               // Handle Input
               textarea.addEventListener('keydown', function(event){
                   if(event.which === 13 && event.shiftKey == false){
                     if(textarea.value.includes("<-")) {
                       var messageObject = textarea.value.split('<-');
                       console.log(messageObject[0]);
                       socket.emit('privateMessage', {
                           sender: username.value,
                           receiver: messageObject[0],
                           message: messageObject[1]
                       });
                     } else {
                       // Emit to server input
                       socket.emit('inputChatMessage', {
                           name:username.value,
                           message:textarea.value
                       });
                     }
                      textarea.value = '';
                       event.preventDefault();
                   }
               })

               socket.on('Allusers', function(allUsers){

                   allUsers.forEach(function(eachuser) {
                    // console.log(eachuser[0]);
                        var userPtag = document.createElement('p');
                        userPtag.setAttribute('class', 'users');
                        userPtag.textContent = eachuser.username;
                        allusers.appendChild(userPtag);
                       allusers.insertBefore(userPtag, allusers.firstChild);
                   });
               });

               // Handle Chat Clear
               clearBtn.addEventListener('click', function(){
                 socket.emit('activeUsers');
                   socket.emit('clear');
               });

               // Clear Message
               socket.on('cleared', function(){
                   messages.textContent = '';
               });
           }

       })();
   </script>
